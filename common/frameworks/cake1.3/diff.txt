diff --git a/cake/libs/view/helpers/time.php b/cake/libs/view/helpers/time.php
index 728d554..fb8789f 100644
--- a/cake/libs/view/helpers/time.php
+++ b/cake/libs/view/helpers/time.php
@@ -191,16 +191,17 @@ class TimeHelper extends AppHelper {
  *
  * @param string $dateString Datetime string or Unix timestamp
  * @param int $userOffset User's offset from GMT (in hours)
+ * @param boolean $useTime Should the time be displayed
  * @return string Formatted date string
  * @access public
  */
-	function nice($dateString = null, $userOffset = null) {
+	function nice($dateString = null, $userOffset = null, $useTime = true) {
 		if ($dateString != null) {
 			$date = $this->fromString($dateString, $userOffset);
 		} else {
 			$date = time();
 		}
-		$format = $this->convertSpecifiers('%a, %b %eS %Y, %H:%M', $date);
+		$format = $this->convertSpecifiers($useTime ? '%a, %b %eS %Y, %H:%M' : '%a, %b %eS %Y', $date);
 		return strftime($format, $date);
 	}
 
@@ -214,20 +215,21 @@ class TimeHelper extends AppHelper {
  *
  * @param string $dateString Datetime string or Unix timestamp
  * @param int $userOffset User's offset from GMT (in hours)
+ * @param boolean $useTime Should the time be displayed
  * @return string Described, relative date string
  * @access public
  */
-	function niceShort($dateString = null, $userOffset = null) {
+	function niceShort($dateString = null, $userOffset = null, $useTime = true) {
 		$date = $dateString ? $this->fromString($dateString, $userOffset) : time();
 
 		$y = $this->isThisYear($date) ? '' : ' %Y';
 
 		if ($this->isToday($date)) {
-			$ret = sprintf(__('Today, %s',true), strftime("%H:%M", $date));
+			$ret = $useTime ? sprintf(__('Today, %s',true), strftime("%H:%M", $date)) : __('Today', true);
 		} elseif ($this->wasYesterday($date)) {
-			$ret = sprintf(__('Yesterday, %s',true), strftime("%H:%M", $date));
+			$ret = $useTime ? sprintf(__('Yesterday, %s',true), strftime("%H:%M", $date)) : __('Yesterday', true);
 		} else {
-			$format = $this->convertSpecifiers("%b %eS{$y}, %H:%M", $date);
+			$format = $this->convertSpecifiers($useTime ? "%b %eS{$y}, %H:%M" : "%b %eS{$y}", $date);
 			$ret = strftime($format, $date);
 		}
 
diff --git a/cake/tests/cases/libs/view/helpers/time.test.php b/cake/tests/cases/libs/view/helpers/time.test.php
index fb8f788..9cdcfa6 100644
--- a/cake/tests/cases/libs/view/helpers/time.test.php
+++ b/cake/tests/cases/libs/view/helpers/time.test.php
@@ -314,18 +314,23 @@ class TimeHelperTest extends CakeTestCase {
 	function testNice() {
 		$time = time() + 2 * DAY;
 		$this->assertEqual(date('D, M jS Y, H:i', $time), $this->Time->nice($time));
-
+		$this->assertEqual(date('D, M jS Y', $time), $this->Time->nice($time, null, false));
+		
 		$time = time() - 2 * DAY;
 		$this->assertEqual(date('D, M jS Y, H:i', $time), $this->Time->nice($time));
-
+		$this->assertEqual(date('D, M jS Y', $time), $this->Time->nice($time, null, false));
+		
 		$time = time();
 		$this->assertEqual(date('D, M jS Y, H:i', $time), $this->Time->nice($time));
-
+		$this->assertEqual(date('D, M jS Y', $time), $this->Time->nice($time, null, false));
+		
 		$time = 0;
 		$this->assertEqual(date('D, M jS Y, H:i', time()), $this->Time->nice($time));
-
+		$this->assertEqual(date('D, M jS Y', time()), $this->Time->nice($time, null, false));
+		
 		$time = null;
 		$this->assertEqual(date('D, M jS Y, H:i', time()), $this->Time->nice($time));
+		$this->assertEqual(date('D, M jS Y', time()), $this->Time->nice($time, null, false));
 	}
 
 /**
@@ -338,15 +343,19 @@ class TimeHelperTest extends CakeTestCase {
 		$time = time() + 2 * DAY;
 		if (date('Y', $time) == date('Y')) {
 			$this->assertEqual(date('M jS, H:i', $time), $this->Time->niceShort($time));
+			$this->assertEqual(date('M jS', $time), $this->Time->niceShort($time, null, false));
 		} else {
 			$this->assertEqual(date('M jSY, H:i', $time), $this->Time->niceShort($time));
+			$this->assertEqual(date('M jS', $time), $this->Time->niceShort($time, null, false));
 		}
 
 		$time = time();
 		$this->assertEqual('Today, '.date('H:i', $time), $this->Time->niceShort($time));
+		$this->assertEqual('Today', $this->Time->niceShort($time, null, false));
 
 		$time = time() - DAY;
 		$this->assertEqual('Yesterday, '.date('H:i', $time), $this->Time->niceShort($time));
+		$this->assertEqual('Yesterday', $this->Time->niceShort($time, null, false));
 	}